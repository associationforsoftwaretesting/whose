<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Critical Thinking on</title><link>https://whose.associationforsoftwaretesting.org/docs/critical-thinking/</link><description>Recent content in Critical Thinking on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 10 Apr 2015 16:07:00 +0000</lastBuildDate><atom:link href="https://whose.associationforsoftwaretesting.org/docs/critical-thinking/index.xml" rel="self" type="application/rss+xml"/><item><title>Modeling</title><link>https://whose.associationforsoftwaretesting.org/docs/critical-thinking/modeling/</link><pubDate>Fri, 10 Apr 2015 16:18:00 +0000</pubDate><guid>https://whose.associationforsoftwaretesting.org/docs/critical-thinking/modeling/</guid><description>Definition: #
The ability to create a representation of another thing
A context where I used this skill: #
Test modeling has been used in almost situation of software and system, including:
GUI modeling of a game app landing page Logic control flow of car engine controller Signature page (user and password) of a banking app for security testing Data input space of a numeric calculator program using combinatorial data test model (link to combinatorial skills?</description></item><item><title>Aristotelian and Predicate Logic</title><link>https://whose.associationforsoftwaretesting.org/docs/critical-thinking/aristotelian-and-predicate-logic/</link><pubDate>Fri, 10 Apr 2015 16:31:00 +0000</pubDate><guid>https://whose.associationforsoftwaretesting.org/docs/critical-thinking/aristotelian-and-predicate-logic/</guid><description>Definition: #
A formalization of thinking, similar to the way in which geometry formalizes drawing. The classic logical statement is:
All Men Are Mortal.
Socrates was a man.
Therefore, Socrates was mortal.
This form of statement is called a syllogism. From these basic building blocks is it possible to analyze statements for validity. For example: I went to the store and I did not go to the store is not true &amp;mdash; or &amp;mdash; at best &amp;mdash; it may be nonsense.</description></item><item><title>Identifying Logical Fallacies</title><link>https://whose.associationforsoftwaretesting.org/docs/critical-thinking/identifying-logical-fallacies/</link><pubDate>Fri, 10 Apr 2015 16:37:00 +0000</pubDate><guid>https://whose.associationforsoftwaretesting.org/docs/critical-thinking/identifying-logical-fallacies/</guid><description>Definition: #
Understanding when the conclusions someone gives at the end of an appeal are not really supported by any claims they have made.
A context where I used this skill: #
A customer of mine in Chicago outsourced a ton of testing to an offshore contract testing organization. In order to exercise changes to core business rules the outsourced testers agreed to include one positive test and one negative test for each changed rule.</description></item><item><title>Critical Thinking</title><link>https://whose.associationforsoftwaretesting.org/docs/critical-thinking/critical-thinking/</link><pubDate>Fri, 10 Apr 2015 16:25:00 +0000</pubDate><guid>https://whose.associationforsoftwaretesting.org/docs/critical-thinking/critical-thinking/</guid><description>Definition: #
Analysis and evaluation to form judgement and reasoned conclusions.
A context where I used this skill: #
While I do use this tool set all the time, allow me to provide one concrete example. I came into a project that involved a computer&amp;mdash;to&amp;mdash;computer system in which the data was generated by a user in a name&amp;mdash;value pairing that our system would interpret. I came into the project after another tester had developed a web page to send these values in an automated fashion and save those test values to a database.</description></item></channel></rss>